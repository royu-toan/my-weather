{"version":3,"sources":["assets/images/icons/cloud.svg","assets/images/icons/brokencloud.svg","assets/images/icons/rain.svg","assets/images/icons/thunderstorm.svg","assets/images/icons/snowflake.svg","assets/images/icons/fog.svg","assets/images/icons/sun.svg","assets/images/icons/night.svg","assets/images/icons/cloudy.svg","assets/images/icons/cloudy_n.svg","assets/images/icons/storm.svg","assets/images/icons/storm_n.svg","assets/images/icons/thermometer.svg","assets/images/icons/wind.svg","assets/images/icons/direct.svg","assets/images/icons/humidity.svg","assets/images/icons/barometer.svg","assets/images/icons/eye.svg","assets/images/icons/sun_uv.svg","assets/images/icons/sunrise.svg","assets/images/icons/sunset.svg","APIs/geocodingAPI.js","APIs/openweathermap.js","APIs/searchAheadAPI.js","Components/Search.js","assets/images/icons/icons.js","Components/Overview.js","Components/Detail.js","Components/Sun.js","Components/Hourly.js","App.js","index.js"],"names":["module","exports","geocodingAPI","key","URL","openweathermap","oneCallAPIURL","geocodingAPIURL","searchAheadAPI","SearchInput","React","forwardRef","children","value","changeInput","spinner","ref","Form","onSubmit","e","preventDefault","Group","Control","type","placeholder","onChange","className","Spinner","animation","role","size","Search","Component","constructor","props","super","handleSearch","text","this","state","typingTimeout","clearTimeout","setState","inputText","results","showResults","setTimeout","axios","get","params","q","collection","location","longitude","latitude","then","res","data","map","item","displayString","place","geometry","coordinates","catch","handleSelectLocation","onChangeLocation","render","Dropdown","Item","onClick","Row","Col","show","Toggle","as","target","Menu","icons","sun","night","cloudy","cloudy_n","cloud","brokencloud","rain","storm","storm_n","thunderstorm","snowflake","fog","thermometer","wind","direct","humidity","barometer","eye","sun_uv","sunrise","sunset","Overview","weather","today","Date","time","year","getFullYear","month","getMonth","slice","date","getDate","hours","getHours","minutes","getMinutes","Card","Body","sm","Title","localName","Subtitle","temp","Text","feels_like","Media","width","src","icon","alt","description","Detail","detailItems","name","temp_max","temp_min","style","transform","wind_deg","wind_speed","pressure","visibility","uvi","index","Sun","currentsun","getTime","ProgressBar","variant","animated","now","Hourly","d","list","hourly","Math","ceil","App","setupLocation","locations","adminArea5","lat","lon","appid","units","lang","current","daily","overview","detail","max","min","handleChangeLocation","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","alert","Container","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.38901532.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud.0eb9f52b.svg\";","module.exports = __webpack_public_path__ + \"static/media/brokencloud.bd483cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.1151f440.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.c4fec047.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake.eaff494d.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.e9d4785d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.07398716.svg\";","module.exports = __webpack_public_path__ + \"static/media/night.d3ace66c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.f1e80e80.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy_n.fba4c835.svg\";","module.exports = __webpack_public_path__ + \"static/media/storm.ec06b756.svg\";","module.exports = __webpack_public_path__ + \"static/media/storm_n.117d13a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/thermometer.28d701de.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.8077074b.svg\";","module.exports = __webpack_public_path__ + \"static/media/direct.76dbdd9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.45301f20.svg\";","module.exports = __webpack_public_path__ + \"static/media/barometer.0675b1c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.24c869d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun_uv.1c63ebae.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunrise.abfde321.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.396ce2cc.svg\";","const geocodingAPI = {\r\n  key: \"a9EoygSNNBGNFYE3SxvjYm4cblADIqei\",\r\n  URL: \"https://www.mapquestapi.com/geocoding/v1/reverse\"\r\n};\r\n\r\nexport default geocodingAPI;\r\n","const openweathermap = {\r\n  key: \"86779a724357317e23e4b484945260b1\",\r\n  oneCallAPIURL: \"https://api.openweathermap.org/data/2.5/onecall\",\r\n  geocodingAPIURL: \"https://api.openweathermap.org/geo/1.0/reverse\"\r\n};\r\n\r\nexport default openweathermap;\r\n","const searchAheadAPI = {\r\n  key: \"a9EoygSNNBGNFYE3SxvjYm4cblADIqei\",\r\n  URL: \"https://www.mapquestapi.com/search/v3/prediction\"\r\n};\r\n\r\nexport default searchAheadAPI;\r\n","// Import APIs\r\nimport searchAheadAPI from \"../APIs/searchAheadAPI\";\r\n\r\n// Import packages\r\nimport axios from \"axios\";\r\n\r\n// Import react\r\nimport React from \"react\";\r\nimport { Row, Col, Dropdown, Form, Spinner } from \"react-bootstrap\";\r\n\r\nconst SearchInput = React.forwardRef(\r\n  ({ children, value, changeInput, spinner }, ref) => (\r\n    <Form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <Form.Group>\r\n        <Form.Control\r\n          ref={ref}\r\n          type=\"text\"\r\n          placeholder={children}\r\n          value={value}\r\n          onChange={changeInput}\r\n        ></Form.Control>\r\n        {spinner ? (\r\n          <div className=\"spinner\">\r\n            <Spinner animation=\"border\" role=\"status\" size=\"sm\"></Spinner>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Form.Group>\r\n    </Form>\r\n  )\r\n);\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      spinner: false,\r\n      typingTimeout: 0,\r\n      inputText: \"\",\r\n      results: [],\r\n      showResults: false\r\n    };\r\n  }\r\n\r\n  handleSearch = (text) => {\r\n    if (this.state.typingTimeout) {\r\n      clearTimeout(this.state.typingTimeout);\r\n    }\r\n\r\n    this.setState({\r\n      spinner: true,\r\n      inputText: text,\r\n      results: [],\r\n      showResults: false\r\n    });\r\n\r\n    this.setState({\r\n      typingTimeout: setTimeout(() => {\r\n        axios\r\n          .get(searchAheadAPI.URL, {\r\n            params: {\r\n              key: searchAheadAPI.key,\r\n              q: text,\r\n              collection: \"adminArea,poi,address,category,franchise,airport\",\r\n              location: `${this.props.longitude},${this.props.latitude}`\r\n            }\r\n          })\r\n          .then((res) => {\r\n            this.setState({\r\n              results: res.data.results.map((item) => ({\r\n                displayString: item.displayString,\r\n                longitude: item.place.geometry.coordinates[0],\r\n                latitude: item.place.geometry.coordinates[1]\r\n              })),\r\n              showResults: true\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              results: [],\r\n              showResults: false\r\n            });\r\n          });\r\n\r\n        this.setState({\r\n          spinner: false\r\n        });\r\n      }, 2000)\r\n    });\r\n  };\r\n\r\n  handleSelectLocation = (latitude, longitude) => {\r\n    this.setState({\r\n      inputText: \"\",\r\n      results: [],\r\n      showResults: false\r\n    });\r\n    this.props.onChangeLocation(latitude, longitude);\r\n  };\r\n\r\n  render() {\r\n    const results = this.state.results.map((item) => (\r\n      <Dropdown.Item\r\n        key={item.displayString}\r\n        onClick={() => {\r\n          this.handleSelectLocation(item.latitude, item.longitude);\r\n        }}\r\n      >\r\n        {item.displayString}\r\n      </Dropdown.Item>\r\n    ));\r\n\r\n    return (\r\n      <Row className=\"App-Search\">\r\n        <Col>\r\n          <Dropdown show={this.state.showResults}>\r\n            <Dropdown.Toggle\r\n              as={SearchInput}\r\n              value={this.state.inputText}\r\n              changeInput={(e) => this.handleSearch(e.target.value)}\r\n              spinner={this.state.spinner}\r\n            >\r\n              Tìm tên thành phố...\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>{results}</Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import sun from \"./sun.svg\";\r\nimport night from \"./night.svg\";\r\nimport cloudy from \"./cloudy.svg\";\r\nimport cloudy_n from \"./cloudy_n.svg\";\r\nimport cloud from \"./cloud.svg\";\r\nimport brokencloud from \"./brokencloud.svg\";\r\nimport rain from \"./rain.svg\";\r\nimport storm from \"./storm.svg\";\r\nimport storm_n from \"./storm_n.svg\";\r\nimport thunderstorm from \"./thunderstorm.svg\";\r\nimport snowflake from \"./snowflake.svg\";\r\nimport fog from \"./fog.svg\";\r\nimport thermometer from \"./thermometer.svg\";\r\nimport wind from \"./wind.svg\";\r\nimport direct from \"./direct.svg\";\r\nimport humidity from \"./humidity.svg\";\r\nimport barometer from \"./barometer.svg\";\r\nimport eye from \"./eye.svg\";\r\nimport sun_uv from \"./sun_uv.svg\";\r\nimport sunrise from \"./sunrise.svg\";\r\nimport sunset from \"./sunset.svg\";\r\n\r\nconst icons = {\r\n  \"01d\": sun,\r\n  \"01n\": night,\r\n  \"02d\": cloudy,\r\n  \"02n\": cloudy_n,\r\n  \"03d\": cloud,\r\n  \"03n\": cloud,\r\n  \"04d\": brokencloud,\r\n  \"04n\": brokencloud,\r\n  \"09d\": rain,\r\n  \"09n\": rain,\r\n  \"10d\": storm,\r\n  \"10n\": storm_n,\r\n  \"11d\": thunderstorm,\r\n  \"11n\": thunderstorm,\r\n  \"13d\": snowflake,\r\n  \"13n\": snowflake,\r\n  \"50d\": fog,\r\n  \"50n\": fog,\r\n  thermometer: thermometer,\r\n  wind: wind,\r\n  direct: direct,\r\n  humidity: humidity,\r\n  barometer: barometer,\r\n  eye: eye,\r\n  sun_uv: sun_uv,\r\n  sunrise: sunrise,\r\n  sunset: sunset\r\n};\r\n\r\nexport default icons;\r\n","// Import react\r\nimport React from \"react\";\r\nimport { Card, Row, Col, Media } from \"react-bootstrap\";\r\n\r\n// Import icons\r\nimport icons from \"../assets/images/icons/icons\";\r\n\r\nconst Overview = (props) => {\r\n  const weather = props.weather;\r\n\r\n  const today = new Date();\r\n  const time = {\r\n    year: today.getFullYear(),\r\n    month: (\"0\" + (today.getMonth() + 1)).slice(-2),\r\n    date: (\"0\" + today.getDate()).slice(-2),\r\n    hours: today.getHours(),\r\n    minutes: (\"0\" + today.getMinutes()).slice(-2)\r\n  };\r\n\r\n  return (\r\n    <Card className=\"App-Overview mt-4\">\r\n      <Card.Body>\r\n        <Row className=\"align-items-end\">\r\n          <Col sm={8}>\r\n            <Card.Title>Thời tiết {weather.localName}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              {time.date}/{time.month}/{time.year}&nbsp;\r\n              {time.hours}:{time.minutes}&nbsp;\r\n              {time.hours >= 12 ? \"PM\" : \"AM\"}\r\n            </Card.Subtitle>\r\n            <Card.Title className=\"fs-1 fw-bold\">{weather.temp}°</Card.Title>\r\n            <Card.Text>\r\n              Cảm giác như&nbsp;\r\n              <span className=\"fs-4 fw-bold\">{weather.feels_like}°</span>\r\n            </Card.Text>\r\n          </Col>\r\n          <Col sm={4} className=\"text-center\">\r\n            <Media>\r\n              <img\r\n                width={100}\r\n                src={icons[weather.icon]}\r\n                alt={weather.description}\r\n              />\r\n            </Media>\r\n            <Card.Text className=\"fs-5 text-capitalize\">\r\n              {weather.description}\r\n            </Card.Text>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","// Import react\r\nimport React from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\n\r\n// Import icons\r\nimport icons from \"../assets/images/icons/icons\";\r\n\r\nconst Detail = (props) => {\r\n  const weather = props.weather;\r\n\r\n  const detailItems = [\r\n    {\r\n      icon: icons.thermometer,\r\n      name: \"Cao/Thấp\",\r\n      value: (\r\n        <span>\r\n          {weather.temp_max}°/{weather.temp_min}°\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      icon: icons.wind,\r\n      name: \"Gió\",\r\n      value: (\r\n        <span>\r\n          <img\r\n            width={16}\r\n            src={icons.direct}\r\n            alt=\"direct\"\r\n            className=\"me-2\"\r\n            style={{\r\n              transform: \"rotate(\" + (weather.wind_deg + 135) + \"deg)\"\r\n            }}\r\n          />\r\n          {weather.wind_speed} km/giờ\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      icon: icons.humidity,\r\n      name: \"Độ ẩm\",\r\n      value: <span>{weather.humidity}%</span>\r\n    },\r\n    {\r\n      icon: icons.barometer,\r\n      name: \"Áp suất\",\r\n      value: <span>{weather.pressure} mb</span>\r\n    },\r\n    {\r\n      icon: icons.eye,\r\n      name: \"Tầm nhìn\",\r\n      value: <span>{weather.visibility} km</span>\r\n    },\r\n    {\r\n      icon: icons.sun_uv,\r\n      name: \"Chỉ số UV\",\r\n      value: <span>{weather.uvi} / 10</span>\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card className=\"App-Detail mt-4\">\r\n      <Card.Body>\r\n        <Row>\r\n          {detailItems.map((item, index) => (\r\n            <Col key={index} sm={6} className=\"mb-2\">\r\n              <div className=\"d-flex align-items-center border-top pt-2\">\r\n                <span className=\"d-flex align-items-center me-auto\">\r\n                  <img\r\n                    width={32}\r\n                    src={item.icon}\r\n                    alt={item.name}\r\n                    className=\"me-2\"\r\n                  />\r\n                  {item.name}\r\n                </span>\r\n                {item.value}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","// Import react\r\nimport React from \"react\";\r\nimport { Row, Col, ProgressBar } from \"react-bootstrap\";\r\n\r\n// Import icons\r\nimport icons from \"../assets/images/icons/icons\";\r\n\r\nconst Sun = (props) => {\r\n  const sunrise = new Date(props.sun.sunrise * 1000);\r\n  const sunset = new Date(props.sun.sunset * 1000);\r\n\r\n  const d = new Date();\r\n  let currentsun =\r\n    ((d.getTime() - sunrise.getTime()) /\r\n      (sunset.getTime() - sunrise.getTime())) *\r\n    100;\r\n\r\n  return (\r\n    <Row className=\"App-Sun align-items-center mt-4\">\r\n      <Col sm={2} className=\"text-center\">\r\n        <img width={32} src={icons.sunrise} alt=\"sunrise\" className=\"me-2\" />\r\n        {sunrise.getHours()}:{sunrise.getMinutes()}\r\n      </Col>\r\n      <Col sm={8}>\r\n        <ProgressBar variant=\"warning\" animated now={currentsun}></ProgressBar>\r\n      </Col>\r\n      <Col sm={2} className=\"text-center\">\r\n        {sunset.getHours()}:{sunset.getMinutes()}\r\n        <img width={32} src={icons.sunset} alt=\"sunset\" className=\"ms-2\" />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Sun;\r\n","// Import react\r\nimport React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\n// Import icons\r\nimport icons from \"../assets/images/icons/icons\";\r\n\r\nconst Hourly = (props) => {\r\n  const d = new Date();\r\n  const hourly = props.hourly.slice(1, 13);\r\n\r\n  const list = hourly.map((item, index) => (\r\n    <Col sm={1} key={index}>\r\n      <Row className=\"text-center align-items-center\">\r\n        <Col>{d.getHours() + index + 1}:00</Col>\r\n        <Col>\r\n          <img width={32} src={icons[item.weather[0].icon]} alt=\"\" />\r\n        </Col>\r\n        <Col className=\"fw-bold mt-sm-3\">{Math.ceil(item.temp)}°</Col>\r\n      </Row>\r\n    </Col>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"App-Hourly mt-4\">\r\n      <Row>\r\n        <Col>\r\n          <p className=\"fs-5 fw-bold\">Dự báo 12h tới</p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-2\">{list}</Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hourly;\r\n","// Import APIs\nimport geocodingAPI from \"./APIs/geocodingAPI\";\nimport openweathermap from \"./APIs/openweathermap\";\n\n// Import packages\nimport axios from \"axios\";\n\n// Import react\nimport React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n// Import components\nimport Search from \"./Components/Search\";\nimport Overview from \"./Components/Overview\";\nimport Detail from \"./Components/Detail\";\nimport Sun from \"./Components/Sun\";\nimport Hourly from \"./Components/Hourly\";\n\n// Import styles\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: 0,\n      longitude: 0,\n      overview: {\n        localName: \"\",\n        temp: 0,\n        feels_like: 0,\n        description: \"\",\n        icon: \"\"\n      },\n      detail: {\n        temp_max: 0,\n        temp_min: 0,\n        wind_speed: 0,\n        wind_deg: 0,\n        humidity: 0,\n        pressure: 0,\n        visibility: 0,\n        uvi: 0\n      },\n      sun: {\n        sunrise: 0,\n        sunset: 0\n      },\n      hourly: []\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        // Get current coord\n        const { latitude, longitude } = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n\n        this.setupLocation(latitude, longitude);\n      });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  setupLocation = (latitude, longitude) => {\n    // Call Geocoding API\n    axios\n      .get(geocodingAPI.URL, {\n        params: {\n          key: geocodingAPI.key,\n          location: `${latitude},${longitude}`\n        }\n      })\n      .then((res) => {\n        let localName = res.data.results[0].locations[0].adminArea5;\n\n        // Call One Call API\n        axios\n          .get(openweathermap.oneCallAPIURL, {\n            params: {\n              lat: latitude,\n              lon: longitude,\n              appid: openweathermap.key,\n              units: \"metric\",\n              lang: \"vi\"\n            }\n          })\n          .then((res) => {\n            const current = res.data.current;\n            const today = res.data.daily[0];\n            this.setState({\n              latitude: latitude,\n              longitude: longitude,\n              overview: {\n                localName: localName,\n                temp: Math.ceil(current.temp),\n                feels_like: Math.ceil(current.feels_like),\n                description: current.weather[0].description,\n                icon: current.weather[0].icon\n              },\n              detail: {\n                temp_max: Math.ceil(today.temp.max),\n                temp_min: Math.ceil(today.temp.min),\n                wind_speed: Math.ceil(current.wind_speed * 3.6),\n                wind_deg: current.wind_deg,\n                humidity: current.humidity,\n                pressure: current.pressure,\n                visibility: current.visibility / 1000,\n                uvi: current.uvi\n              },\n              sun: {\n                sunrise: current.sunrise,\n                sunset: current.sunset\n              },\n              hourly: res.data.hourly\n            });\n          });\n      });\n  };\n\n  handleChangeLocation = (latitude, longitude) => {\n    this.setupLocation(latitude, longitude);\n  };\n\n  render() {\n    return (\n      <div className=\"App px-1 py-4\">\n        <Container>\n          <Row>\n            <Col>\n              <Search\n                latitude={this.state.latitude}\n                longitude={this.state.longitude}\n                onChangeLocation={this.handleChangeLocation}\n              />\n              <Overview weather={this.state.overview} />\n              <Detail weather={this.state.detail}></Detail>\n              <Sun sun={this.state.sun} />\n              <Hourly hourly={this.state.hourly} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}